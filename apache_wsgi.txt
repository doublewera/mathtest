Предположим, что фрагменты по установке Python_v3.x на систему,
где изначально установлен Python_v2.x, а так же объяснение,
почему нельзя обойтись без виртуальной среды типа virtualenv,
либо пример, опровергающий этот тезис, уже написаны.
(Слегка лисповая конструкция, понимаю)

Среда может быть установлена в одну директорию, а проект - В ДРУГУЮ.
Среда активируется командой source с относительным путем к
среда/bin/activate

Также предположим, что установлен Django, создан hello-world project,
встроенный веб-сервер успешно запускается, создан супер-пользователь
и ссылка вроде http://127.0.0.1/admin/ позволяет войти во встроенную панель
администрирования сайта.

Для подключения Django_v2.x к Apache_v2.x под Python_v3.x  необходимо:
1. Установить apache2 (это такой веб-сервер, т.е. штука, которая...)
2. Установить mod_wsgi (libapache2-mod-wsgi-py3), потому что Django...
3. Убедиться, что defaultная страница Apache отображается в web-browser
   по адресу 127.0.0.1
4. Сконфигурировать Apache2 для работы с wsgi:
4.1 Отредактировать ГЛОБАЛЬНЫЙ конфигурационный файл, предложив
Apache использовать виртуальную среду для Python3.x
Для этого необходимо *аккуратно* (здесь и далее) добавить переменную
WSGIPythonHome /path/to/venv

К примеру, если среда была создана командой
virtualenv -p python3 python3_ve
при pwd == /home/student

то путь будет выглядеть так:
WSGIPythonHome /home/student/python3_ve

БЕЗ слэш (/) на конце!

4.2 Сайт с точки зрения Apache, работающего с Django,
представляет собой питонный модуль (именно поэтому при создании
проекта, Django прописала пустые файлы __init__.py, см. пакеты
и модули Python)

Исходно Apache с Django будут искать его в среде, в библиотеке
lib/python3.x/site-packages (устар. вариант dist-packages)
но для того, чтобы не линковать в ту директорию сначала сайт, а потом
все его внутренности (приложения), необходимо прописать еще
одну переменную в ГЛОБАЛЬНЫЙ конфиг /etc/apache2/apache2.conf

Если сайт лежит в директории /home/student/myfirstdjango
 (аналог DocumentRoot в "обычной" конфигурации апача)
то

WSGIPythonPath /home/student/myfirstdjango

DocumentRoot при этом не нужен

4.3 Морда сайта с точки зрения Apache будет работать на VirtualHost
Это такая конструкция-конфиг, описывающая множество настроек доступа и
redirectов сайта, передачи и получения данных от приложений, web-мастера
и log-файлов. Сайтов на одном физическом/виртуальном сервере может быть
несколько! Для этого под нгих выделяются разные порты, на которые будут идти
перенаправления при поступления запросов по купленным для этих сайтов
доменным именам.

Все доступные для работы сайты будут располагаться в
/etc/apache2/sites-available/
и подключаться/отключаться в директории
/etc/apache2/sites-enabled (symbolic links)

Файлы виртуальных хостов в дальнейшем будут включены в файл глобального
конфига Apache (см. конец файла, где include)

Каждый виртуальный хост имеет свой порт (проверить!!!) и по умолчанию
создан один host с портом 80. ПРИМЕЧАТЕЛЬНО, что ngnix (read: энджиникс)
тоже по умолчанию встает на 80-ый порт и при установке параллельно с апачем
вываливается на этапе конфигурации!

4.4 В этот файл конфигурации виртуального хоста надо добавить одну переменную,
указывающую ROOT для wsgi (найти уже, наконец, как оно разаббревиатуривается!)

WSGIScriptAlias / home/student/myfirstdjango/sitemaindir/wsgi.py

И описание поведения с директорией проекта.

ВОПРОС: почему не срабатывает
<Directory ${WSGIPythonPath}>

</Directory>
???

Пока получилось так:
<Directory /home/student/myfirstdjango/sitemaindir/wsgi.py>
    Options Indexes FollowSymLinks
    AllowOverride None
    Require all granted
</Directory>

5. Apache - это вам не встроенный сервер Django. Если были изменены настройки,
серверу следует об этом сообщить, выполнив
/etc/init.d/apache2 reload

если это не поможет, то restart. Restart можно смотреть еще и из

apachectl restart

6. Поскольку мы наверняка что-то забыли, оно не заработает. Разбираться будем
по логам здесь (где все нормальные программы пишут свои логи)

/var/log/apache2/error.log

А также в systemctl

Приятной настройки!
